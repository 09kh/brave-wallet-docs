"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[592],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=u(n),h=i,f=p["".concat(s,".").concat(h)]||p[h]||m[h]||a;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var u=2;u<a;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5975:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return l},toc:function(){return m},default:function(){return h}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),c=["components"],o={sidebar_position:6},s="Switching to EVM compatible chains",u={unversionedId:"ethereum/use-cases/switching-evm-compatible-chains",id:"ethereum/use-cases/switching-evm-compatible-chains",title:"Switching to EVM compatible chains",description:"Websites can request that the browser changes to a different chain by using the wallet_switchEthereumChain method.",source:"@site/docs/ethereum/use-cases/switching-evm-compatible-chains.md",sourceDirName:"ethereum/use-cases",slug:"/ethereum/use-cases/switching-evm-compatible-chains",permalink:"/ethereum/use-cases/switching-evm-compatible-chains",editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/ethereum/use-cases/switching-evm-compatible-chains.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Adding EVM compatible chains",permalink:"/ethereum/use-cases/adding-evm-compatible-chains"},next:{title:"Adding custom tokens",permalink:"/ethereum/use-cases/adding-custom-tokens"}},l={},m=[],p={toc:m};function h(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"switching-to-evm-compatible-chains"},"Switching to EVM compatible chains"),(0,a.kt)("p",null,"Websites can request that the browser changes to a different chain by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"wallet_switchEthereumChain")," method."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"async function switchEthereumChain(chainId) {\n  return await window.ethereum.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{\n      chainId\n    }]\n  })\n}\nconsole.log(await switchEthereumChain('0x3'))\n\n")))}h.isMDXComponent=!0}}]);