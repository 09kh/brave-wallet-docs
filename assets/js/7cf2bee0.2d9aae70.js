"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[38],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return b}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),b=a,f=d["".concat(p,".").concat(b)]||d[b]||u[b]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5796:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},assets:function(){return s},toc:function(){return u},default:function(){return b}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},p="Properties",c={unversionedId:"solana/provider-api/properties",id:"solana/provider-api/properties",title:"Properties",description:"Compatibility",source:"@site/docs/solana/provider-api/properties.md",sourceDirName:"solana/provider-api",slug:"/solana/provider-api/properties",permalink:"/solana/provider-api/properties",editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/solana/provider-api/properties.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/solana/provider-api/methods"},next:{title:"Events",permalink:"/solana/provider-api/events"}},s={},u=[{value:"Compatibility",id:"compatibility",level:2},{value:"<code>braveSolana.publicKey</code>",id:"bravesolanapublickey",level:2},{value:"<code>braveSolana.isConnected</code>",id:"bravesolanaisconnected",level:2}],d={toc:u};function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"#Properties"),(0,o.kt)("h2",{id:"compatibility"},"Compatibility"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"window.solana")," is an alias of ",(0,o.kt)("inlineCode",{parentName:"p"},"window.braveSolana")," which should be used mainly."),(0,o.kt)("h2",{id:"bravesolanapublickey"},(0,o.kt)("inlineCode",{parentName:"h2"},"braveSolana.publicKey")),(0,o.kt)("p",null,"It will return ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," when wallet is not connected, otherwise ",(0,o.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html"},"solanaWeb3.PublicKey"),"\nof selected account will be returned."),(0,o.kt)("h2",{id:"bravesolanaisconnected"},(0,o.kt)("inlineCode",{parentName:"h2"},"braveSolana.isConnected")),(0,o.kt)("p",null,"It will return ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," when current page is connected, ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," otherwise. Note\nthat same site on different tabs have different connected state."))}b.isMDXComponent=!0}}]);