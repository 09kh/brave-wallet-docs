"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[914],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,v=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(v,i(i({ref:t},s),{},{components:n})):r.createElement(v,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1182:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},assets:function(){return s},toc:function(){return d},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:1},p="Brave Wallet detection",c={unversionedId:"solana/provider-api/provider-detection",id:"solana/provider-api/provider-detection",title:"Brave Wallet detection",description:"Compatability with Phantom",source:"@site/docs/solana/provider-api/provider-detection.md",sourceDirName:"solana/provider-api",slug:"/solana/provider-api/provider-detection",permalink:"/solana/provider-api/provider-detection",editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/solana/provider-api/provider-detection.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/solana"},next:{title:"Methods",permalink:"/solana/provider-api/methods"}},s={},d=[{value:"Compatability with Phantom",id:"compatability-with-phantom",level:2},{value:"Synchronous detection",id:"synchronous-detection",level:2},{value:"Wallet adapter",id:"wallet-adapter",level:2}],u={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"brave-wallet-detection"},"Brave Wallet detection"),(0,o.kt)("h2",{id:"compatability-with-phantom"},"Compatability with Phantom"),(0,o.kt)("p",null,"Since Brave Wallet aims to be compatible with Phantom's exposed API, we set ",(0,o.kt)("inlineCode",{parentName:"p"},"window.solana.isPhantom")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),".\nAnd ",(0,o.kt)("inlineCode",{parentName:"p"},"window.solana")," is an alias of ",(0,o.kt)("inlineCode",{parentName:"p"},"window.braveSolana"),"."),(0,o.kt)("h2",{id:"synchronous-detection"},"Synchronous detection"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const isBraveWallet = window.braveSolana.isBraveWallet\nconsole.log('Brave Wallet: ', isBraveWallet)\n")),(0,o.kt)("h2",{id:"wallet-adapter"},"Wallet adapter"),(0,o.kt)("p",null,"Example can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/wallet-adapter"},"here")))}m.isMDXComponent=!0}}]);